"use strict";(self.webpackChunkwhiskeysockets_github_io=self.webpackChunkwhiskeysockets_github_io||[]).push([[671],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(r),m=a,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||s;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5047:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const s={sidebar_position:7},i="Reading Messages",o={unversionedId:"tutorial-basics/reading-messages",id:"tutorial-basics/reading-messages",title:"Reading Messages",description:"A set of message keys must be explicitly marked read now.",source:"@site/docs/tutorial-basics/reading-messages.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/reading-messages",permalink:"/docs/tutorial-basics/reading-messages",draft:!1,editUrl:"https://github.com/WhiskeySockets/whiskeysockets.github.io/tree/main/docs/tutorial-basics/reading-messages.md",tags:[],version:"current",lastUpdatedAt:1718621597,formattedLastUpdatedAt:"Jun 17, 2024",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Forwarding Messages",permalink:"/docs/tutorial-basics/forwarding-messages"},next:{title:"Update Presence",permalink:"/docs/tutorial-basics/update-presence"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"reading-messages"},"Reading Messages"),(0,a.kt)("p",null,'A set of message keys must be explicitly marked read now.\nIn multi-device, you cannot mark an entire "chat" read as it were with Baileys Web.\nThis means you have to keep track of unread messages.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const key = {\n  remoteJid: "1234-123@g.us",\n  id: "AHASHH123123AHGA", // id of the message you want to read\n  participant: "912121232@s.whatsapp.net", // the ID of the user that sent the  message (undefined for individual chats)\n};\n// pass to readMessages function\n// can pass multiple keys to read multiple messages as well\nawait sock.readMessages([key]);\n')),(0,a.kt)("p",null,"The message ID is the unique identifier of the message that you are marking as read.\nOn a ",(0,a.kt)("inlineCode",{parentName:"p"},"WAMessage"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"messageID")," can be accessed using ",(0,a.kt)("inlineCode",{parentName:"p"},"messageID = message.key.id"),"."))}d.isMDXComponent=!0}}]);