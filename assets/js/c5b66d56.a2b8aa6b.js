"use strict";(self.webpackChunkwhiskeysockets_github_io=self.webpackChunkwhiskeysockets_github_io||[]).push([[636],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),p=l(n),h=i,g=p["".concat(c,".").concat(h)]||p[h]||d[h]||a;return n?o.createElement(g,s(s({ref:t},u),{},{components:n})):o.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=h;var r={};for(var c in t)hasOwnProperty.call(t,c)&&(r[c]=t[c]);r.originalType=e,r[p]="string"==typeof e?e:i,s[1]=r;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=n(7462),i=(n(7294),n(3905));const a={sidebar_position:2},s="Saving & Restoring Sessions",r={unversionedId:"tutorial-basics/saving-session",id:"tutorial-basics/saving-session",title:"Saving & Restoring Sessions",description:"You obviously don't want to keep scanning the QR code every time you want to connect.",source:"@site/docs/tutorial-basics/saving-session.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/saving-session",permalink:"/docs/tutorial-basics/saving-session",draft:!1,editUrl:"https://github.com/WhiskeySockets/whiskeysockets.github.io/tree/main/docs/tutorial-basics/saving-session.md",tags:[],version:"current",lastUpdatedAt:1718621597,formattedLastUpdatedAt:"Jun 17, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configuring the Connection",permalink:"/docs/tutorial-basics/configuration"},next:{title:"Handling Events",permalink:"/docs/tutorial-basics/handling-events"}},c={},l=[{value:"Listening to Connection Updates",id:"listening-to-connection-updates",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"saving--restoring-sessions"},"Saving & Restoring Sessions"),(0,i.kt)("p",null,"You obviously don't want to keep scanning the QR code every time you want to connect."),(0,i.kt)("p",null,"So, you can load the credentials to log back in:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import makeWASocket, {\n  BufferJSON,\n  useMultiFileAuthState,\n} from "@whiskeysockets/baileys";\nimport * as fs from "fs";\n\n// utility function to help save the auth state in a single folder\n// this function serves as a good guide to help write auth & key states for SQL/no-SQL databases, which I would recommend in any production grade system\nconst { state, saveCreds } = await useMultiFileAuthState("auth_info_baileys");\n// will use the given state to connect\n// so if valid credentials are available -- it\'ll connect without QR\nconst conn = makeWASocket({ auth: state });\n// this will be called as soon as the credentials are updated\nconn.ev.on("creds.update", saveCreds);\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"When a message is received/sent, due to signal sessions needing updating, the auth keys (",(0,i.kt)("inlineCode",{parentName:"p"},"authState.keys"),") will update. Whenever that happens, you must save the updated keys (",(0,i.kt)("inlineCode",{parentName:"p"},"authState.keys.set()")," is called). Not doing so will prevent your messages from reaching the recipient & cause other unexpected consequences. The ",(0,i.kt)("inlineCode",{parentName:"p"},"useMultiFileAuthState")," function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.")),(0,i.kt)("h2",{id:"listening-to-connection-updates"},"Listening to Connection Updates"),(0,i.kt)("p",null,"Baileys now fires the ",(0,i.kt)("inlineCode",{parentName:"p"},"connection.update")," event to let you know something has updated in the connection. This data has the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type ConnectionState = {\n  /** connection is now open, connecting or closed */\n  connection: WAConnectionState;\n  /** the error that caused the connection to close */\n  lastDisconnect?: {\n    error: Error;\n    date: Date;\n  };\n  /** is this a new login */\n  isNewLogin?: boolean;\n  /** the current QR code */\n  qr?: string;\n  /** has the device received all pending notifications while it was offline */\n  receivedPendingNotifications?: boolean;\n};\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This also offers any updates to the QR")))}d.isMDXComponent=!0}}]);